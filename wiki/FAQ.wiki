#summary Frequently Asked Questions
#labels Featured

===What's with the name?===
Distal is an acronym for Dynamic Interface Simplified with Template Attribute Language. Distal also represents the "distance" between the data and the user interface as being a valley that is difficult to cross. Distal also happens to be phonetically similar to "distill" which patrons the notion of distilling data into the HTML tree.

===What's with the logo?===
The logo is a database with whipped cream on top. A notion that Distal puts the user interface (whipped cream) right next to the data (database), and squeezing our the middle-man. This is not to be taken literally. Always follow the application design rules of abstraction.

http://code.google.com/p/distal/logo?endswith=.png

===Will my page validate against the W3C validator?===
Yes, provided that you use the latest HTML doctype `<!DOCTYPE html>`. This doctype allows the use of arbitrary "data-" attributes in your HTML. Another advantage is that because your HTML validates, your Template code will also validate too.

===Where do i define the HTML snippets that go into the webpage?===
Distal works differently than traditional string based templates. Traditionally you put HTML inside a string or a hidden script tag and add marking symbols and have the engine parse and replace those symbols dynamically before inserting that into your document. Distal works with your existing HTML document. You design your webpage as if it is already filled with data. Then you go back through your webpage and mark which nodes should have its data replaced dynamically. Distal works to modify your web page dynamically.
 
===Can I customize the attribute names?===
If the attribute names are incompatible with your existing website, you can change them to your own custom name:
<code language="javascript">
<script src="distal.js"></script> 
<script> 
distal.qdef = "xdef"; 
distal.qattr = "xattr"; 
distal.qtext = "xtext"; 
//... etc.
</script>

<div xattr="rss.feeds.title"></div>
</code>

===How can I format the data output?===
You can format floating point numbers to have 2 decimal places and have a thousandth separator by adding *`,.`* as the last parameter. Don't forget to separate the last parameter with a space: "(space)(comma)(dot)":
<code language="javascript">
<input data-qattr="value total_cost ,."> 
<div data-qtext="total_cost ,."></div> </code>
You can define your own formatting function like this (but don't use the reserved *`;`* character inside your name):
<code language="javascript">
distal.format[".3"] = function(value) { 
    return value.toFixed(3); 
};</code>

===How can I hook into Distal to perform some action before a node is modified?===
Add a callback function to Distal like this:
<code language=javascript>
distal.beforeAttr = function(node, attName, newAttValue) { /*your function*/ }; 
distal.beforeText = function(node, newText) { /*your function*/ };</code>
This is also a good place to drop in your animation code or debugging code. Make sure your callback function doesn't throw exceptions or else Distal will stop.

===Does it work with jQuery?===
Yes, but note that Distal needs the actual node as the parameter. JQuery by default, does not return actual nodes, but returns arrays. You need to call it like `distal($("table")[0], data)` and not like `distal($("table"), data)`.

===Do you support progressive enhancement?===
Yes, because your HTML also doubles as your template. When your page first loads, it will have all the data and HTML in place for older browsers to view. If the browser supports Javascript, when you call Distal it will modify the current page to insert new data inside it. Other template frameworks do not have this feature as their templates are defined in strings or in hidden script tags which are not visible to the user if Javascript is not supported.

Another advantage is that since your HTML is also your template code, you do not have to duplicate your template code in 2 places to achieve progressive enhancement.

===Do you support search engine optimization?===
Yes, because your HTML also doubles as your template. Since a page that uses Distal looks the same with Javascript and without Javascript, search engines are able to see all the contents in your page without executing Javascript and are able to fully index your page.